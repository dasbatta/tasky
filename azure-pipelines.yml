# Docker
# Build, Scan with Trivy and push an image to Azure Container Registry

trigger:
- main

#Azure Pipelines to use the code from the same repository for the pipeline execution.
resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8d517dde-0729-402d-93a3-7c0ae77c193e'
  imageRepository: 'gotasky'
  containerRegistry: 'wizdemo.azurecr.io'
  dockerfilePath: 'tasky/Dockerfile'
  tag: 'latest'
  acr: 'wizdemo'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        git clone https://github.com/dasbatta/tasky.git
        cd tasky
        echo "Hello Wizards!!" > wizexercise.txt
        sed -i '/^COPY --from=build  \/go\/src\/tasky\/assets \.\/assets$/a COPY wizexercise.txt /app/' Dockerfile
        cat Dockerfile       
      displayName: 'Create text file and modify Dockerfile'    

    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: 'build'
        Dockerfile: $(dockerfilePath)
        tags: |
          $(tag)
        containerRegistry: $(acr) 
        repository: $(imageRepository)

    - script: |
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image --exit-code 1 --no-progress wizdemo.azurecr.io/$(imageRepository):$(tag)
      displayName: 'Scan Docker Image with Trivy'
      continueOnError: true


    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        command: 'push'
        containerRegistry: $(acr) 
        repository: $(imageRepository)
        tags: |
          $(tag)
      condition: succeededOrFailed()
